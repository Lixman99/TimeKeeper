{"version":3,"sources":["assets/spinner.gif","assets/logo1.png","utils/helpers.js","components/ProductItem/index.js","utils/actions.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","components/Chatbot/chat.js","components/Footer/footer.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Sucess.js","utils/reducers.js","redux/store.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ProductItem","item","state","useSelector","dispatch","useDispatch","cart","image","name","price","quantity","React","createElement","className","Link","to","concat","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","_objectSpread","product","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CATEGORIES","_templateObject2","_templateObject3","QUERY_USER","_templateObject4","QUERY_CHECKOUT","_templateObject5","ProductList","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","category","setCategory","_useState5","_useState6","showMore","setShowMore","_useQuery","useQuery","loading","data","useEffect","products","forEach","then","filteredProducts","filter","toLowerCase","includes","filterProducts","placeholder","onChange","event","target","value","defaultValue","categories","map","key","length","Fragment","slice","spinner","CategoryMenu","_ref","_objectDestructuringEmpty","categoryData","class","CartItem","role","aria-label","removeFromCart","authService","AuthService","_classCallCheck","_createClass","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","__await","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","stripePromise","loadStripe","Cart","cartOpen","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","_getCart","_asyncToGenerator","_callee","_context","_toConsumableArray","apply","arguments","getCart","res","redirectToCheckout","sessionId","checkout","session","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","variables","Chatbot","_Component","_inherits","_super","_createSuper","ThemeProvider","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","ChatBot","steps","id","message","trigger","user","end","Component","Footer","href","FaFacebook","FaTwitter","FaInstagram","FaYoutube","ChatbotFooter","Home","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","handleFormSubmit","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","firstName","lastName","addUser","Nav","logo","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","defaultState","currentCategory","reducer","action","newState","createStore","OrderHistory","orders","order","purchaseDate","toLocaleDateString","index","client","ApolloClient","operation","setContext","headers","authorization","uri","App","ApolloProvider","Router","Provider","Switch","Route","exact","path","component","Header","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.71f8d1df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo1.02e9f38c.png\";","export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name\r\n  }\r\n  return name + 's'\r\n}\r\n\r\n\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    // open connection to the database `shop-shop` with the version of 1\r\n    const request = window.indexedDB.open('timekeepers', 1);\r\n\r\n    // create variables to hold reference to the database, transaction (tx), and object store\r\n    let db, tx, store;\r\n\r\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores \r\n    /*\r\n      So now whenever we run this idbPromise() function,\r\n      we establish a connection to the database. Remember\r\n      that with IndexedDB, the .onupgradeneeded() event\r\n      only runs if the browser notices that the version\r\n      number in the .open() method has changed since the\r\n      last time, or if the browser has never connected\r\n      to the database before and 1 is the new version.\r\n      Any other time this code executes and the version \r\n      is still 1, the .onupgradeneeded() will not run.\r\n    */\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    // handle any errors with connecting\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    // on database open success\r\n    request.onsuccess = function(e) {\r\n            \r\n      // save a reference of the database to the `db` variable\r\n      db = request.result;\r\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      // save a reference to that object store\r\n      store = tx.objectStore(storeName);\r\n  \r\n      // if there's any errors, let us know\r\n      db.onerror = function(e) {\r\n      console.log('error', e);\r\n      };\r\n\r\n      /*\r\n      check which value we passed into the function as a method and perform \r\n      that method on the object store:\r\n      */\r\n  \r\n      switch (method) {\r\n          case 'put':\r\n            store.put(object);\r\n            resolve(object);\r\n            break;\r\n          case 'get':\r\n            const all = store.getAll();\r\n            all.onsuccess = function() {\r\n              resolve(all.result);\r\n            };\r\n            break;\r\n          case 'delete':\r\n            store.delete(object._id);\r\n            break;\r\n          default:\r\n            console.log('No valid method');\r\n            break;\r\n        }\r\n\r\n      // when the transaction is complete, close the connection\r\n      tx.oncomplete = function() {\r\n      db.close();\r\n      };\r\n    };\r\n\r\n  });\r\n}\r\n\r\nexport const filteredProducts = (products, searchModel, searchPrice) => {\r\n  return products.filter(product => {\r\n    const modelMatch = product.name.toLowerCase().includes(searchModel.toLowerCase());\r\n    const priceMatch = product.price.toString().toLowerCase().includes(searchPrice.toLowerCase());\r\n\r\n    return modelMatch && priceMatch;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\"\r\n// commented out in favor of redux logic\r\n//import { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport \"../ProductList/index.css\"\r\n\r\nfunction ProductItem(item) {\r\n  // commented out in favor of redux logic\r\n  //const [state, dispatch] = useStoreContext();\r\n  const state = useSelector((state) => {\r\n    return state\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const { cart } = state;\r\n\r\n  // deconstruct item object\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity\r\n  } = item;\r\n\r\n\r\n \r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img className=\"image\"\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>{quantity} {pluralize(\"Item\", quantity)} in stock</div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","// Global State Store targetting the Apollo data\r\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n\r\n// Global State Store targetting the UI shopping cart\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const TOGGLE_CART = 'TOGGLE_CART';\r\n","import gql from 'graphql-tag';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const QUERY_USER = gql`\r\n{\r\n  user {\r\n    firstName\r\n    lastName\r\n    orders {\r\n      _id\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        image\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport ProductItem from '../ProductItem';\r\nimport { QUERY_PRODUCTS } from '../../utils/queries';\r\nimport spinner from '../../assets/spinner.gif';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport './index.css';\r\n\r\nfunction ProductList() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, dispatch, loading]);\r\n\r\n  function filterProducts() {\r\n    let filteredProducts = state.products;\r\n    if (category) {\r\n      filteredProducts = filteredProducts.filter((product) => product.category._id === category);\r\n    }\r\n    if (searchTerm) {\r\n      filteredProducts = filteredProducts.filter((product) => product.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    }\r\n    return filteredProducts;\r\n  }\r\n\r\n  function handleSearchInputChange(event) {\r\n    setSearchTerm(event.target.value);\r\n  }\r\n\r\n  function handleCategoryChange(event) {\r\n    setCategory(event.target.value);\r\n  }\r\n\r\n  function handleShowMoreClick() {\r\n    setShowMore(!showMore);\r\n  }\r\n\r\n  function renderProducts(products) {\r\n    return (\r\n      <div className=\"container\">\r\n      {products\r\n        .slice(0, showMore ? products.length : 10)\r\n        .map((product) => (\r\n          <ProductItem\r\n            key={product._id}\r\n            _id={product._id}\r\n            image={product.image}\r\n            name={product.name}\r\n            price={product.price}\r\n            quantity={product.quantity}\r\n            className=\"image-style\" // Place className attribute here\r\n          />\r\n        ))}\r\n    </div>\r\n    \r\n    \r\n    );\r\n  }\r\n\r\n  const filteredProducts = filterProducts();\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      <div className=\"flex-row\">\r\n        <input type=\"text\" placeholder=\"Search by name\" onChange={handleSearchInputChange} />\r\n        <select defaultValue=\"\" onChange={handleCategoryChange}>\r\n          <option value=\"\">All Categories</option>\r\n          {state.categories.map((category) => (\r\n            <option value={category._id} key={category._id}>\r\n              {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {filteredProducts.length ? (\r\n        <>\r\n          {renderProducts(filteredProducts)}\r\n          {filteredProducts.length > 25 && (\r\n            \r\n            <div className=\"btn\">\r\n              <button className=\"btn-more\"onClick={handleShowMoreClick}>{showMore ? 'Show Less' : 'Show More'}</button>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <h3>No products found</h3>\r\n      )}\r\n      {loading && <img src={spinner} alt=\"loading\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\r\nimport \"../CategoryMenu/index.css\"\r\n// import image1 from \"../../assets/ImageNav2.png\"\r\n\r\n// Provider Global Store import\r\n// commented out in favor of redux logic\r\n//import { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Import IndexDB helper which will allow the app to talk\r\n// to the database\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\n// setCategory  was used before adding our handleclick\r\n//function CategoryMenu({ setCategory }) {\r\n// therefore it can be removed from the prop as we are using the \r\n// global sate\r\n\r\nfunction CategoryMenu({}) {\r\n  // Before migrating to use global Store\r\n  //const { data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n  //const categories = categoryData?.categories || [];\r\n\r\n  // commented out in favor of redux logic\r\n  //const [state, dispatch] = useStoreContext();\r\n  const state = useSelector((state) => {\r\n    return state\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const { categories } = state;\r\n  // loading will be used for offline capabilities\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\r\n    if (categoryData) {\r\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories\r\n      });\r\n      // also add to indexDB\r\n      categoryData.categories.forEach(category => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      console.log(\"I am offline\")\r\n      idbPromise('categories', 'get').then(categories => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories\r\n        });\r\n      });\r\n\r\n    }\r\n  }, [loading, categoryData, dispatch]);\r\n\r\n  const handleClick = id => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id\r\n    });\r\n  };\r\n\r\n  return (\r\n\r\n<div class=\"wrapper\">\r\n    <div className=\"watch-categories\">\r\n      {/* your categories button code here */}\r\n\r\n    </div>\r\n    <div className='slogan' >\r\n      <h2>Timeless style, just a click away!</h2>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default CategoryMenu;","import React from 'react';\r\n// commented out in favor of redux logic\r\n//import { useStoreContext } from '../../utils/GlobalState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n\r\n      /*\r\n    Note that we only destructured the dispatch() \r\n    function from the useStoreContext Hook,\r\n    because the CartItem component has no \r\n    need to read state. \r\n    */\r\n    // commented out in favor of redux logic  \r\n    //const [, dispatch] = useStoreContext();\r\n    const state = useSelector((state) => {\r\n      return state\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCart = item => {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n    };\r\n    \r\n    const onChange = (e) => {\r\n      const value = e.target.value;\r\n    \r\n      if (value === '0') {\r\n        dispatch({\r\n          type: REMOVE_FROM_CART,\r\n          _id: item._id\r\n        });\r\n      \r\n        idbPromise('cart', 'delete', { ...item });\r\n      } else {\r\n        dispatch({\r\n          type: UPDATE_CART_QUANTITY,\r\n          _id: item._id,\r\n          purchaseQuantity: parseInt(value)\r\n        });\r\n      \r\n        idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n      }\r\n\r\n    };\r\n\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nconst authService = new AuthService();\r\nexport default authService;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\n\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\n\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nimport './style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_51MmU36BlbDJj83aqAwRrJZByL7a8TdG45zoSSlQFWGN0vBwig59E8oPM3XijEwweSA0VQ0bZRWfhXoANuMKXwZPc00HyNd9tt5');\r\n\r\nconst Cart = () => {\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart);\r\n    const cartOpen = useSelector(state => state.cartOpen);\r\n\r\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n    useEffect(() => {\r\n        async function getCart() {\r\n            const cart = await idbPromise('cart', 'get');\r\n            dispatch({\r\n                type: ADD_MULTIPLE_TO_CART,\r\n                products: [...cart]\r\n            });\r\n        };\r\n\r\n        if (!cart.length) {\r\n            getCart();\r\n        }\r\n    }, [cart.length, dispatch]);\r\n\r\n    function toggleCart() {\r\n        dispatch({ type: TOGGLE_CART });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            stripePromise.then(res => {\r\n                res.redirectToCheckout({ sessionId: data.checkout.session });\r\n            });\r\n        }\r\n    }, [data]\r\n    );\r\n\r\n    function calculateTotal() {\r\n        let sum = 0;\r\n        cart.forEach(item => {\r\n            sum += item.price * item.purchaseQuantity;\r\n        });\r\n        return sum.toFixed(2);\r\n    };\r\n\r\n    function submitCheckout() {\r\n        const productIds = [];\r\n\r\n        cart.forEach(item => {\r\n            for (let i = 0; i < item.purchaseQuantity; i++) {\r\n                productIds.push(item._id);\r\n            }\r\n        });\r\n\r\n        getCheckout({\r\n            variables: { products: productIds }\r\n        });\r\n    };\r\n\r\n    if (!cartOpen) {\r\n        return (\r\n            <div className=\"cart-closed\" onClick={toggleCart}>\r\n                <span role=\"img\" aria-label=\"cart\">🛒</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <div className=\"close\" onClick={toggleCart}>[close]</div>\r\n            <h2>Shopping Cart</h2>\r\n            <div>\r\n                {cart.length ? (\r\n                    <div>\r\n                        {cart.map(item => (\r\n                            <CartItem key={item._id} item={item} />\r\n                        ))}\r\n                        <div className=\"flex-row space-between\">\r\n                            <strong>Total: ${calculateTotal()}</strong>\r\n                            {\r\n                                Auth.loggedIn() ?\r\n                                    <button onClick={submitCheckout}>\r\n                                        Checkout\r\n                                    </button>\r\n                                    :\r\n                                    <span>(log in to check out)</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <h3>\r\n                        <span role=\"img\" aria-label=\"shocked\">\r\n                            😱\r\n                        </span>\r\n                        You haven't added anything to your cart yet!\r\n                    </h3>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React, { Component } from 'react';\r\nimport { ThemeProvider , styled } from 'styled-components';\r\nimport ChatBot from 'react-simple-chatbot';\r\n\r\nclass Chatbot extends Component {\r\n  render() {\r\n    const theme = {\r\n      background: '#f5f8fb',\r\n      fontFamily: 'Helvetica Neue',\r\n      headerBgColor: '#EF6C00',\r\n      headerFontColor: '#fff',\r\n      headerFontSize: '15px',\r\n      botBubbleColor: '#EF6C00',\r\n      botFontColor: '#fff',\r\n      userBubbleColor: '#fff',\r\n      userFontColor: '#4a4a4a',\r\n    };\r\n    const steps = [\r\n      {\r\n        id: '1',\r\n        message: 'Welcome to our store!',\r\n        trigger: '2',\r\n      },\r\n      {\r\n        id: '2',\r\n        message: 'How can I help you today?',\r\n        trigger: '3',\r\n      },\r\n      {\r\n        id: '3',\r\n        user: true,\r\n        trigger: '4',\r\n      },\r\n      \r\n      {\r\n        id: '4',\r\n        message: 'Great! Please enter your order number:.',\r\n        end: true,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <ChatBot steps={steps} />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chatbot;\r\n","import React from 'react';\r\nimport './Footer.css'; // import CSS file\r\nimport { FaFacebook, FaTwitter, FaInstagram, FaYoutube } from 'react-icons/fa';\r\nimport ChatbotFooter from '../Chatbot/chat';\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container-footer\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <h3>About Us</h3>\r\n            <p>We are a leading online store for watches shopping needs.</p>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <h3>Contact Us</h3>\r\n            <p>Email: info@timekeeprs.com</p>\r\n            <p>Phone: 555-555-5555</p>\r\n            <p>Address: 1000 Any St, Ottawa Canada</p>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <h3>Follow Us</h3>\r\n            <ul className=\"social-icons\">\r\n              <li><a href=\"https://www.facebook.com/\" className='facebook'><FaFacebook/></a></li>\r\n              <li><a href=\"https://www.twitter.com/\" className='twitter'><FaTwitter/></a></li>\r\n              <li><a href=\"https://www.instagram.com/\" className='instagram'><FaInstagram /></a></li>\r\n              <li><a href=\"https://www.youtube.com/\"className='youtube'><FaYoutube /></a></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <h3>Twitter Feed</h3>\r\n            <a className=\"twitter-timeline\" href=\"https://twitter.com/TwitterDev\">Tweets by TwitterDev</a>\r\n          </div>  \r\n        </div>\r\n        <div className='chat'>\r\n        <ChatbotFooter />   \r\n        </div>\r\n      </div> \r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from '../components/Cart';\r\nimport Footer from \"../components/Footer/footer\"\r\n// import hiroImage from '../assets/Watches.png';\r\n\r\n\r\n// Before being managed globally\r\n// const Home = () => {\r\n//   const [currentCategory, setCategory] = useState(\"\");\r\n\r\n//   before being managed globally\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <CategoryMenu setCategory={setCategory} />\r\n//       <ProductList currentCategory={currentCategory} />\r\n//     </div>\r\n//   );\r\n\r\n \r\n// };\r\n\r\n // after being managed globally\r\n const Home = () => {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"hero-image\">\r\n        {/* <img src={hiroImage} alt=\"watch\" /> */}\r\n      </div>\r\n      <CategoryMenu />\r\n      <ProductList />\r\n      <Cart />\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Cart from \"../components/Cart\";\r\n// remove as we will use redux store\r\n//import { useStoreContext } from \"../utils/GlobalState\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from \"../utils/actions\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from '../assets/spinner.gif'\r\n\r\nfunction Detail() {\r\n  // commented out in favor of redux logic for useStoreContext\r\n  //const [state, dispatch] = useStoreContext();\r\n  // redux useStoreContent logic\r\n  const state = useSelector((state) => {\r\n    return state\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find(product => product._id === id));\r\n    } \r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n\r\n    }\r\n  }\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  // check if there is anything in cart then display also.\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">\r\n            ← Back to Products\r\n          </Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>\r\n            {currentProduct.description}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>\r\n            ${currentProduct.price}\r\n            {\" \"}\r\n            <button onClick={addToCart}>\r\n              Add to Cart\r\n            </button>\r\n            <button \r\n              disabled={!cart.find(p => p._id === currentProduct._id)} \r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {\r\n        loading ? <img src={spinner} alt=\"loading\" /> : null\r\n      }\r\n      <Cart />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      // style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      } \r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\r\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN } from \"../utils/mutations\"\r\nimport Auth from \"../utils/auth\";\r\nimport \"../pages/loginForm.css\"\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' })\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">\r\n        ← Go to Signup\r\n      </Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {\r\n          error ? <div>\r\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\r\n          </div> : null\r\n        }\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '',  firstName: '', lastName: '' });\r\n\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName  // Add this line\r\n      }\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n  \r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">\r\n        ← Go to Login\r\n      </Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Signup;","import React, { useEffect, useState } from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\nimport logo from \"../../assets/logo1.png\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\" className=\"nav-link\">\r\n              Order History\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" className=\"nav-link\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\" className=\"nav-link\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\" className=\"nav-link\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\" className=\"logo\">\r\n        <img src={logo} alt=\"Timekeepers\" />\r\n        <span>Timekeepers</span>\r\n      </Link>\r\n      <nav className=\"nav\">{showNavigation()}</nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { ADD_ORDER } from \"../utils/mutations\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map(item => item._id);\r\n      \r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n    \r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n        \r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>\r\n          Thank you for your purchase!\r\n        </h2>\r\n        <h2>\r\n          You will now be redirected to the home page\r\n        </h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;","// commented out in favor of redux logic\r\n//import { useReducer } from 'react';\r\n\r\n// actions to take\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  ADD_TO_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from './actions';\r\n\r\nconst defaultState = {\r\n  products: [],\r\n  cart: [],\r\n  cartOpen: false,\r\n  categories: [],\r\n  currentCategory: '',\r\n}\r\n  \r\n  const reducer = (state=defaultState, action) => {\r\n    switch (action.type) {\r\n        // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\r\n        case UPDATE_PRODUCTS:\r\n            return {\r\n            ...state,\r\n            products: [...action.products]\r\n            };\r\n        // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\r\n        case UPDATE_CATEGORIES:\r\n            return {\r\n            ...state,\r\n            categories: [...action.categories]\r\n            };\r\n        // if action type value is the value of `UPDATE_CURRENT_CATEGORY`, return a new string instead of an array\r\n        case UPDATE_CURRENT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                currentCategory: action.currentCategory\r\n            };\r\n        // UI Cart case\r\n        case ADD_TO_CART:\r\n          return {\r\n            ...state,\r\n            cartOpen: true,\r\n            cart: [...state.cart, action.product]\r\n          };\r\n        // add multiple to cart\r\n        case ADD_MULTIPLE_TO_CART:\r\n          return {\r\n            ...state,\r\n            cart: [...state.cart, ...action.products],\r\n          };\r\n        // Remove from cart\r\n        case REMOVE_FROM_CART:\r\n          let newState = state.cart.filter(product => {\r\n            return product._id !== action._id;\r\n          });\r\n        \r\n          return {\r\n            ...state,\r\n            cartOpen: newState.length > 0,\r\n            cart: newState\r\n          };\r\n        case UPDATE_CART_QUANTITY:\r\n          return {\r\n            ...state,\r\n            cartOpen: true,\r\n            cart: state.cart.map(product => {\r\n              if (action._id === product._id) {\r\n                product.purchaseQuantity = action.purchaseQuantity;\r\n              }\r\n              return product;\r\n            })\r\n          };\r\n\r\n        case CLEAR_CART:\r\n          return {\r\n            ...state,\r\n            cartOpen: false,\r\n            cart: []\r\n          };\r\n        \r\n        case TOGGLE_CART:\r\n          return {\r\n            ...state,\r\n            cartOpen: !state.cartOpen\r\n          };\r\n  \r\n          // if no changes, leave as default values\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n\r\n  export default reducer;\r\n\r\n  // commented out in favor of redux logic\r\n  // export function useProductReducer(initialState) {\r\n  //   return useReducer(reducer, initialState);\r\n  // }","import { createStore } from 'redux';\r\nimport reducer from '../utils/reducers'\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_USER } from \"../utils/queries\";\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">\r\n          ← Back to Products\r\n          </Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img\r\n                          alt={name}\r\n                          src={`/images/${image}`}\r\n                        />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n\r\n      </div>\r\n\r\n    </>)\r\n\r\n};\r\n\r\nexport default OrderHistory;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloClient from 'apollo-boost';\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Footer/footer\"\r\nimport Success from \"./pages/Sucess\";\r\n// redux hook and store\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport OrderHistory from \"./pages/OrderHistory\";\r\n\r\n// custom React Hook\r\n// commented out in favor of redux\r\n// import { StoreProvider } from \"./utils/GlobalState\";\r\n\r\n\r\n\r\n\r\nconst client = new ApolloClient({\r\n  request: (operation) => {\r\n    const token = localStorage.getItem('id_token')\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n    })\r\n  },\r\n  uri: '/graphql',\r\n})\r\n\r\n// Custom React Hook called added as StoreProvider container\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          {/*<StoreProvider>*/}\r\n          <Provider store={store}>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/signup\" component={Signup} />\r\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\r\n              <Route exact path=\"/products/:id\" component={Detail} />\r\n              <Route exact path=\"/success\" component={Success} />\r\n              <Route component={NoMatch} />\r\n              <Route exact path=\"/\" component={Header} />\r\n              \r\n            </Switch>\r\n          </Provider>\r\n          {/*</StoreProvider>*/}\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}