{"ast":null,"code":"var _jsxFileName = \"/Users/sviatoslav/Documents/Project3/Timekeeper/my-app/client/src/components/ProductList/index.js\";\nimport React, { useEffect } from 'react';\n// commented out in favor of redux logic\n//import { useStoreContext } from '../../utils/GlobalState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport spinner from \"../../assets/spinner.gif\";\n\n//import IndexDB helper which will allow the app to talk\n// to the database\nimport { idbPromise } from \"../../utils/helpers\";\n\n// currentCategory props is no longer used as is part of the \n//function ProductList({ currentCategory }) {\n// global state\n\nfunction ProductList(_ref) {\n  let {} = _ref;\n  // commented out in favor of redux logic\n  //const [state, dispatch] = useStoreContext();\n  const state = useSelector(state => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const {\n    currentCategory\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n\n  //const products = data?.products || [];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      // but let's also take each product and save it to IndexedDB using the helper function \n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then(products => {\n        // use retrieved data to set global state for offline browsing\n        console.log(\"I am offline\");\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [loading, data, dispatch]);\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Our Products:\"), state.products.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, filterProducts().map(product => /*#__PURE__*/React.createElement(ProductItem, {\n    key: product._id,\n    _id: product._id,\n    image: product.image,\n    name: product.name,\n    price: product.price,\n    quantity: product.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"You haven't added any products yet!\"), loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }) : null);\n}\nexport default ProductList;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","UPDATE_PRODUCTS","useQuery","ProductItem","QUERY_PRODUCTS","spinner","idbPromise","ProductList","_ref","state","dispatch","currentCategory","loading","data","type","products","forEach","product","then","console","log","filterProducts","filter","category","_id","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","key","image","name","price","quantity","src","alt"],"sources":["/Users/sviatoslav/Documents/Project3/Timekeeper/my-app/client/src/components/ProductList/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\n// commented out in favor of redux logic\n//import { useStoreContext } from '../../utils/GlobalState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport spinner from \"../../assets/spinner.gif\"\n\n//import IndexDB helper which will allow the app to talk\n// to the database\nimport { idbPromise } from \"../../utils/helpers\";\n\n// currentCategory props is no longer used as is part of the \n//function ProductList({ currentCategory }) {\n// global state\n\nfunction ProductList({}) {\n\n  // commented out in favor of redux logic\n  //const [state, dispatch] = useStoreContext();\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  //const products = data?.products || [];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      // but let's also take each product and save it to IndexedDB using the helper function \n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        // use retrieved data to set global state for offline browsing\n        console.log(\"I am offline\")\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      })\n    }\n  }, [loading, data, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n \n\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}